(defun [=> obj att val]
       [do
       (defun [addAttr obj att val] [(set obj
			 (join (eval obj) (list (list att val))))])
       (defun [updateObjAttr obj att val]
	      [do
	      (defun [updateattr val name entry]
		     [(if (== (list name) (head entry))
			  [list name val]
			  [entry])])
	      (set obj
		   (map (updateattr val att) (eval obj)))
	      ])
       (defun [hasAttr obj att] [!= () (-> obj att)])
       
       (if (hasAttr obj att)
	   [updateObjAttr obj att val]
	   [addAttr obj att val]
	   )
       ])


(defun [-> obj attr]
       [eval (filter (lambda [x] [!= () x])
		     (map (lambda [x] [if (== attr (first x)) [second x] []])
			  (eval obj)))])

(defun [call objref attr & param]
       [do
       (def [level-cnt] 2)
       (map
	(lambda [object-attribute] [do
	  	  (uplevel level-cnt (join [def] (list (first object-attribute)) (list (second object-attribute))))
	  (set [level-cnt] (+ level-cnt 1))
		   ])
	      (eval objref))
       (def [result] (curry (eval attr) param))
       (set objref (map (lambda [object-attribute] [ (list (first object-attribute) (eval (first object-attribute)))]) (eval objref)))
       (result)
       ])

(def [abstract] (error "MethodNotImplemented"))
